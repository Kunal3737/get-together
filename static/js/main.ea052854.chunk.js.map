{"version":3,"sources":["components/scripts/Navigation.js","components/scripts/Home.js","components/scripts/Host.js","components/scripts/Join.js","components/scripts/Schedule.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","styleNav","color","textDecoration","to","style","className","Home","fontSize","Host","onSubmit","htmlFor","type","id","placeholder","Join","Schedule","App","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea052854.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport '../styles/Navigation.css';\r\n\r\nfunction Navigation() {\r\n    \r\n    const styleNav = {\r\n        color : 'white',\r\n        textDecoration : 'none'\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <Link to=\"/\" style={styleNav}>\r\n                <h1 className=\"homeLogo\">Get Together</h1>\r\n            </Link>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/signin\" style={styleNav}>\r\n                    <li>SIGN IN</li>\r\n                </Link>\r\n                <Link to=\"/signup\" style={styleNav} >\r\n                    <li>SIGN UP</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport {Link } from 'react-router-dom';\r\nimport '../styles/Home.css';\r\n\r\nfunction Home() {\r\n\r\n    const styleNav = {\r\n        textDecoration : 'none',\r\n        /* textShadow: '2px 2px 4px #000000', */\r\n        fontSize: '50px',\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/host\" style={styleNav}>\r\n                <div className=\"homeDiv\">Host</div>\r\n            </Link>\r\n            <Link to=\"/join\" style={styleNav}>\r\n                <div className=\"homeDiv\">Join</div>\r\n            </Link>\r\n            <Link to=\"/schedule\" style={styleNav}>\r\n                <div className=\"homeDiv\">Schedule</div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport '../styles/Host.css';\r\n\r\nfunction Host() {\r\n    return (\r\n        <div>\r\n            <form className=\"hostForm\" onSubmit=\"\">\r\n                <label className=\"labelForHost\" htmlFor=\"topic\">Meeting Topic: </label>\r\n                <input className=\"inputForHost\" type=\"text\" id=\"topic\" placeholder=\"Topic\" />\r\n                <br/><br/>\r\n                <label className=\"labelForHost\" htmlFor=\"meetingPassword\">Password: &nbsp; &nbsp; &nbsp; &nbsp; </label>\r\n                <input className=\"inputForHost\" type=\"password\" id=\"meetingPassword\" placeholder=\"Password\" />\r\n                <br/><br/>\r\n                <button type=\"submit\" className=\"hostButton\">Host</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Host\r\n","import React from 'react';\r\nimport '../styles/Join.css';\r\n\r\nfunction Join() {\r\n    return (\r\n      <div>\r\n        <form className=\"joinForm\" onSubmit=\"\">\r\n          <label className=\"labelForJoin\" htmlFor=\"meetingID\">\r\n            Meeting ID:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"inputForJoin\"\r\n            type=\"text\"\r\n            id=\"meetingID\"\r\n            placeholder=\"Meeting ID\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <label className=\"labelForJoin\" htmlFor=\"meetingPassword\">\r\n            Password: &nbsp; &nbsp;\r\n          </label>\r\n          <input\r\n            className=\"inputForJoin\"\r\n            type=\"password\"\r\n            id=\"meetingPassword\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\" className=\"joinButton\">\r\n            Join\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Join\r\n","import React from \"react\";\r\nimport '../styles/Schedule.css';\r\n\r\nfunction Schedule() {\r\n  return (\r\n    <div>\r\n      <form className=\"scheduleForm\" onSubmit=\"\">\r\n        <label className=\"labelForSchedule\" htmlFor=\"meetingTitle\">\r\n          Meeting Title:{\" \"}\r\n        </label>\r\n        <input\r\n          className=\"inputForSchedule\"\r\n          type=\"text\"\r\n          id=\"meetingTitle\"\r\n          placeholder=\"Meeting Title\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label className=\"labelForSchedule\" htmlFor=\"meetingDate\">\r\n          Date:{\" \"}\r\n        </label>\r\n        <input\r\n          className=\"inputForSchedule\"\r\n          type=\"date\"\r\n          id=\"meetingDate\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label className=\"labelForSchedule\" htmlFor=\"timeFrom\">\r\n          From: &nbsp;\r\n        </label>\r\n        <input\r\n          className=\"inputForSchedule\"\r\n          type=\"time\"\r\n          id=\"timeFrom\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label className=\"labelForSchedule\" htmlFor=\"timeTo\">\r\n          To: &nbsp;\r\n        </label>\r\n        <input\r\n          className=\"inputForSchedule\"\r\n          type=\"time\"\r\n          id=\"timeTo\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label className=\"labelForSchedule\" htmlFor=\"passwordSchedule\">\r\n          Password: &nbsp;\r\n        </label>\r\n        <input\r\n          className=\"inputForSchedule\"\r\n          type=\"password\"\r\n          id=\"passwordSchedule\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <button type=\"submit\" className=\"scheduleButton\">\r\n          Schedule\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navigation from './components/scripts/Navigation';\nimport Home from './components/scripts/Home';\nimport Host from './components/scripts/Host';\nimport Join from './components/scripts/Join';\nimport Schedule from './components/scripts/Schedule';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/host\" component={Host} />\n          <Route exact path=\"/join\" component={Join} />\n          <Route exact path=\"/schedule\" component={Schedule} />\n          <Route render={() => <h2>404 Page Not Found</h2>} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}